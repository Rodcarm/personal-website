# name: Deploy
# on:
#   push:
#     branches:
#       - test
# jobs:
#   sync:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3
#         with:
#           repository: 'Rodcarm/personal-website'
#           token: ${{ secrets.API_TOKEN_GITHUB }}
#           ref: main
#           fetch-depth: 0 
          
#       - name: Set up Git Configuration
#         run: |
#           git config --global user.name "Rodrigo"
#           git config --global user.email "rcarmona@realmetrics.io"
#       - name: Git status
#         run: |
#           git status
#       - name: Push to gitAccionTest
#         run: |
#           git push --force https://${{ secrets.API_TOKEN_GITHUB }}@github.com/Rodcarm/gitActionspersonal-website.git

name: Save Json
on:
  push:
    branches:
      - main
    paths:
      - 'files/new-files/deploy.json'
jobs:
  save-json-in-repo-Controller:
    runs-on: ubuntu-latest
    steps:
      - name: Get personal-website
        uses: actions/checkout@v4
        with:
          repository: 'Rodcarm/personal-website'
          token: ${{ secrets.API_TOKEN_GITHUB }}
      - name: Send Json File to repo
        run: |
          CLONE_DIRECTORY=$(mktemp -d)
          DESTINATION_DIRECTORY="files/new-files/"
          git config --global user.email "${{ github.event.head_commit.author.email }}"
          git config --global user.name "${{ github.actor }}"

          rm -rf .git

          git clone https://${{ secrets.API_TOKEN_GITHUB }}@github.com/Rodcarm/personal-website.git repo
          cd repo
          ls -la

          new_author="${{ github.event.head_commit.author.email }}"
          jq --arg author "$new_author" '.author = $author' files/new-files/deploy.json > files/new-files/deploy_temp.json && mv files/new-files/deploy_temp.json files/new-files/deploy.json
          commit_message=$(jq -r ".commit_message" files/new-files/deploy.json)

          git clone --single-branch --branch "main" "https://${{ secrets.API_TOKEN_GITHUB }}@github.com/Rodcarm/controller.git" "$CLONE_DIRECTORY"
          ls -la "$CLONE_DIRECTORY"
          mkdir -p "$CLONE_DIRECTORY/$DESTINATION_DIRECTORY"
          cp -rvf "./files/new-files/deploy.json" "$CLONE_DIRECTORY/$DESTINATION_DIRECTORY${commit_message}.json"
          cd "$CLONE_DIRECTORY"

          COMMIT_MESSAGE=${commit_message}

          git add .
          git status

          git diff-index --quiet HEAD || git commit --message "$COMMIT_MESSAGE"
          echo "push commit"
          git push origin --set-upstream main



